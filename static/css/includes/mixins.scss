@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}
@mixin gradient-left-right($fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background-image: -webkit-gradient(linear, left top, right top, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient(left, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient(left, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient(left, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient(left, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient(left, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}

@mixin framer-gradient {
  background-image: -o-linear-gradient(-44deg, #EFF9FE 0%, #5CBEF4 22%, #0A59AE 65%, #0E2955 100%);
  background-image: -moz-linear-gradient(-44deg, #EFF9FE 0%, #5CBEF4 22%, #0A59AE 65%, #0E2955 100%);
  background-image: -ms-linear-gradient(-44deg, #EFF9FE 0%, #5CBEF4 22%, #0A59AE 65%, #0E2955 100%);
  background-image: linear-gradient(-44deg, #EFF9FE 0%, #5CBEF4 22%, #0A59AE 65%, #0E2955 100%);
}

@mixin purple-gradient {
  background-image: -o-linear-gradient(-44deg, #D8CCFF 0%, #7E65CE 49%, #3A247F 100%);
  background-image: -moz-linear-gradient(-44deg, #D8CCFF 0%, #7E65CE 49%, #3A247F 100%);
  background-image: -ms-linear-gradient(-44deg, #D8CCFF 0%, #7E65CE 49%, #3A247F 100%);
  background-image: linear-gradient(-44deg, #D8CCFF 0%, #7E65CE 49%, #3A247F 100%);
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
@mixin scale($scale) {
   @include transform(scale($scale));
} 
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}